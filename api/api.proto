syntax = "proto3";

package comiq.api;

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "model.proto";

option go_package = "comiq/api";

service User {
  /*
  session情報からユーザー情報を取得する
  */
  rpc Get(UserService.Get.Request) returns (model.User) {
    option (google.api.http) = {
        get: "/v1/users/me"
      };
  };
  /*
  ログインする
  */
  rpc Login(UserService.Login.Request) returns (UserService.Login.Response) {
    option (google.api.http) = {
        post: "/v1/users/login"
        body: "*"
      };
  };
  /*
  ユーザーを登録する
  */
  rpc SignUp(UserService.SignUp.Request) returns (UserService.SignUp.Response) {
    option (google.api.http) = {
        post: "/v1/users/signup"
        body: "*"
      };
  };
  /*
  ログアウトする
  */
  rpc Logout(UserService.Logout.Request) returns (UserService.Logout.Response) {
    option (google.api.http) = {
        post: "/v1/users/logout"
      };
  };
};

message UserService {
  message Get {
    message Request {
    }
  }
  message SignUp {
    message Request {
      string id = 1;
      string password = 2;
    }
    message Response {
    }
  }
  message Login {
    message Request {
      string id = 1;
      string password = 2;
    }
    message Response {
    }
  }
  message Logout {
    message Request {
    }
    message Response {
    }
  }
}

service Author {
  /*
  作者一覧を取得する
  */
  rpc List(AuthorService.List.Request) returns (AuthorService.List.Response) {
    option (google.api.http) = {
        get: "/v1/authors"
      };
  };
}

message AuthorService {
  message List {
    message Request {
    }
    message Response {
      repeated model.Author authors = 1;
    }
  }
}

service BookSeries {
  /*
  作品一覧を取得する
  */
  rpc List(BookSeriesService.List.Request)
  returns (BookSeriesService.List.Response) {
    option (google.api.http) = {
        get: "/v1/book_series"
      };
  };
  /*
  ある作品の書籍一覧を取得する
  */
  rpc BookList(BookSeriesService.BookList.Request)
  returns (BookSeriesService.BookList.Response) {
    option (google.api.http) = {
        get: "/v1/book_series/{id}/books"
      };
  };
}

message BookSeriesService {
  message List {
    message Request {
    }
    message Response {
      repeated model.BookSeries bookseries = 1;
    }
  }
  message BookList {
    message Request {
      string id = 1;
    }
    message Response {
      repeated model.Book books = 1;
    }
  }
}

service Stamp {
  /*
  スタンプ一覧を取得する
  */
  rpc List(StampService.List.Request) returns (StampService.List.Response) {
    option (google.api.http) = {
        get: "/v1/stamps"
      };
  };
}

message StampService {
  message List {
    message Request {
    }
    message Response {
      repeated model.Stamp stamps = 1;
    }
  }
}

service BookUserStamp {
  /*
  ユーザーが押したスタンプ一覧を取得する
  */
  rpc List(BookUserStampService.List.Request)
  returns (BookUserStampService.List.Response) {
    option (google.api.http) = {
        get: "/v1/book_user_stamps"
      };
  };
  /*
  ユーザーが押したスタンプ情報を登録する
  */
  rpc Create(BookUserStampService.Create.Request)
  returns (BookUserStampService.Create.Response) {
    option (google.api.http) = {
        post: "/v1/book_user_stamps"
        body: "*"
      };
  };
  /*
  ユーザーが押したスタンプ情報を削除する
  */
  rpc Delete(BookUserStampService.Delete.Request)
  returns (BookUserStampService.Delete.Response) {
    option (google.api.http) = {
        delete: "/v1/book_user_stamps/{id}"
      };
  };
}

message BookUserStampService {
  message List {
    message Request {
      string book_series_id = 1;
      string book_id = 2;
      string user_id = 3;
      string stamp_id = 4;
    }
    message Response {
      repeated model.BookUserStamp book_user_stamps = 1;
    }
  }
  message Create {
    message Request {
      string book_id = 1;
      uint32 page_num = 2;
      uint32 x = 3;
      uint32 y = 4;
      string stamp_id = 5;
    }
    message Response {
      string id = 1;
    }
  }
  message Delete {
    message Request {
      string id = 1;
    }
    message Response {
    }
  }
}